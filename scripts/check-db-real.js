const { createClient } = require('@supabase/supabase-js')

// –ò—Å–ø–æ–ª—å–∑—É–µ–º —Ä–µ–∞–ª—å–Ω—ã–µ –∫–ª—é—á–∏
const supabaseUrl = 'https://izjneklmbzgaihvwgwqx.supabase.co'
const supabaseServiceKey = 'eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpc3MiOiJzdXBhYmFzZSIsInJlZiI6Iml6am5lazFjYzFjYy1jYzFjLWNjMWMtY2MxYy1jYzFjYzFjY2NjMWMiLCJyb2xlIjoic2VydmljZV9yb2xlIiwiaWF0IjoxNzM0OTY4MDAwLCJleHAiOjIwNTA1NDQwMDB9.test'

const supabase = createClient(supabaseUrl, supabaseServiceKey)

async function checkDatabase() {
  console.log('üîç –ü—Ä–æ–≤–µ—Ä–∫–∞ —Ä–µ–∞–ª—å–Ω–æ–π –±–∞–∑—ã –¥–∞–Ω–Ω—ã—Ö Supabase...\n')

  const tables = [
    'users',
    'employees', 
    'banks',
    'bank_accounts',
    'cards',
    'casinos',
    'transactions',
    'test_sites',
    'work_files',
    'activity_logs',
    'salary_calculations'
  ]

  console.log('URL:', supabaseUrl)
  console.log('–ò—Å–ø–æ–ª—å–∑—É—é service role key\n')

  for (const table of tables) {
    try {
      const { data, error, count } = await supabase
        .from(table)
        .select('*', { count: 'exact', head: true })
      
      if (error) {
        console.log(`‚ùå ${table}: ${error.message}`)
      } else {
        console.log(`‚úÖ ${table}: –°—É—â–µ—Å—Ç–≤—É–µ—Ç (–∑–∞–ø–∏—Å–µ–π: ${count || 0})`)
      }
    } catch (err) {
      console.log(`‚ùå ${table}: ${err.message}`)
    }
  }

  // –ü—Ä–æ–≤–µ—Ä—è–µ–º –∫–æ–Ω–∫—Ä–µ—Ç–Ω–æ —Ç–∞–±–ª–∏—Ü—É cards
  console.log('\nüìä –î–µ—Ç–∞–ª—å–Ω–∞—è –ø—Ä–æ–≤–µ—Ä–∫–∞ —Ç–∞–±–ª–∏—Ü—ã cards:')
  try {
    const { data: cards, error, count } = await supabase
      .from('cards')
      .select('*', { count: 'exact' })
      .limit(5)
    
    if (error) {
      console.log('‚ùå –û—à–∏–±–∫–∞:', error.message)
      console.log('–ö–æ–¥ –æ—à–∏–±–∫–∏:', error.code)
      console.log('–î–µ—Ç–∞–ª–∏:', error.details)
    } else {
      console.log(`‚úÖ –ù–∞–π–¥–µ–Ω–æ ${count || 0} –∫–∞—Ä—Ç`)
      if (cards && cards.length > 0) {
        console.log('\n–ü—Ä–∏–º–µ—Ä—ã –∫–∞—Ä—Ç:')
        cards.forEach((card, i) => {
          console.log(`${i + 1}. ${card.card_number} - ${card.card_type} - ${card.status}`)
        })
      }
    }
  } catch (err) {
    console.log('‚ùå –ö—Ä–∏—Ç–∏—á–µ—Å–∫–∞—è –æ—à–∏–±–∫–∞:', err.message)
  }
}

checkDatabase()
